// Mocks generated by Mockito 5.2.0 from annotations
// in clean_architecture_flutter/test/screens/login/domain/usecases/login_user_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:clean_architecture_flutter/core/error/failures.dart' as _i5;
import 'package:clean_architecture_flutter/screens/login/domain/entities/login.dart'
    as _i6;
import 'package:clean_architecture_flutter/screens/login/domain/repositories/login_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i3.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Login>> loginUser(
          String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#loginUser, [email, password]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Login>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Login>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Login>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Login>> fetchCachedToken() =>
      (super.noSuchMethod(Invocation.method(#fetchCachedToken, []),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Login>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Login>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Login>>);
}
