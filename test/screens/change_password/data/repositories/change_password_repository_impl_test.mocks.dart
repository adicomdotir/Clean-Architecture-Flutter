// Mocks generated by Mockito 5.2.0 from annotations
// in clean_architecture_flutter/test/screens/change_password/data/repositories/change_password_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:clean_architecture_flutter/core/network/network_info.dart'
    as _i5;
import 'package:clean_architecture_flutter/screens/change_password/data/datasources/change_password_local_datasource.dart'
    as _i2;
import 'package:clean_architecture_flutter/screens/change_password/data/datasources/change_password_remote_datasource.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ChangePasswordLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChangePasswordLocalDataSource extends _i1.Mock
    implements _i2.ChangePasswordLocalDataSource {
  MockChangePasswordLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [ChangePasswordRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChangePasswordRemoteDataSource extends _i1.Mock
    implements _i3.ChangePasswordRemoteDataSource {
  MockChangePasswordRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> changePassword(String? oldPassword, String? newPassword) =>
      (super.noSuchMethod(
          Invocation.method(#changePassword, [oldPassword, newPassword]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
